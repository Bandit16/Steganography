    @import url('https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap');
    @import url('https://unpkg.com/normalize.css') layer(normalize);

    @layer normalize, base, demo, stick, effect, srollbar, debug;

    @layer debug {
        [data-debug='true'] li {
            outline: 0.05em dashed currentColor;
        }

        [data-debug='true'] :is(h2, li:last-of-type) {
            outline: 0.05em dashed canvasText;
        }
    }

    @layer scrollbar {
        @property --hue {
            initial-value: 0;
            syntax: '<number>';
            inherits: false;
        }

        @property --chroma {
            initial-value: 0;
            syntax: '<number>';
            inherits: true;
        }

        [data-sync-scrollbar='true'] {
            scrollbar-color: oklch(var(--lightness) var(--chroma) var(--hue)) #0000;
        }

        @supports (animation-timeline: scroll()) and (animation-range: 0% 100%) {
            [data-sync-scrollbar='true'][data-animate='true'] {
                timeline-scope: --list;
                scrollbar-color: oklch(var(--lightness) var(--chroma, 0) var(--hue)) #0000;
                animation-name: change, chroma-on, chroma-off;
                animation-fill-mode: both;
                animation-timing-function: linear;
                /* animation-timeline: scroll(root); */
                animation-range: entry 50% exit 50%, entry 40% entry 50%,
                    exit 30% exit 40%;
                animation-timeline: --list;

                ul {
                    view-timeline: --list;
                }
            }
        }

        @keyframes change {
            to {
                --hue: var(--end);
            }
        }

        @keyframes chroma-on {
            to {
                --chroma: 0.3;
            }
        }

        @keyframes chroma-off {
            to {
                --chroma: 0;
            }
        }
    }

    @layer effect {
        :root {
            --start: 0;
            --end: 360;
            --lightness: 65%;
            --base-chroma: 0.3;
        }

        [data-theme='dark'] {
            --lightness: 75%;
        }

        [data-theme='light'] {
            --lightness: 65%;
        }

        @media (prefers-color-scheme: dark) {
            --lightness: 75%;
        }

        ul {
            --step: calc((var(--end) - var(--start)) / (var(--count) - 1));
        }

        li:not(:last-of-type) {
            color: oklch(var(--lightness) var(--base-chroma) calc(var(--start) + (var(--step) * var(--i))));
        }

        @supports (animation-timeline: scroll()) and (animation-range: 0% 100%) {
            [data-animate='true'] {
                li {
                    opacity: 0.2;
                    animation-name: brighten;

                    &:first-of-type {
                        --start-opacity: 1;
                    }

                    &:last-of-type {
                        --brightness: 1;
                        --end-opacity: 1;
                    }

                    animation-fill-mode: both;
                    animation-timing-function: linear;
                    animation-range: cover calc(50% - 1lh) calc(50% + 1lh);
                    animation-timeline: view();
                }
            }

            @keyframes brighten {
                0% {
                    opacity: var(--start-opacity, 0.2);
                }

                50% {
                    opacity: 1;
                    filter: brightness(var(--brightness, 1.2));
                }

                100% {
                    opacity: var(--end-opacity, 0.2);
                }
            }
        }
    }

    @layer stick {
        section:first-of-type {
            --font-level: 6;
            display: flex;
            line-height: 1.25;
            width: 100%;
            padding-left: 5rem;
        }

        section:last-of-type {
            min-height: 75vh;
            display: flex;
            place-items: center;
            width: 100%;
            justify-content: center;

            h2 {
                --font-level: 6;
            }
        }

        main {
            width: 100%;
        }

        section:first-of-type h2 {
            position: sticky;
            top: calc(50% - 0.5lh);
            font-size: inherit;
            margin: 0;
            display: inline-block;
            height: fit-content;
            font-weight: 600;
        }

        ul {
            font-weight: 600;
            padding-inline: 0;
            margin: 0;
            list-style-type: none;
        }

        [data-snap='true'] {
            scroll-snap-type: y proximity;

            li {
                scroll-snap-align: center;
            }
        }

        h2,
        li:last-of-type {
            background: linear-gradient(canvasText 50%,
                    color-mix(in oklch, canvas, canvasText 25%));
            background-clip: text;
            color: #0000;
        }
    }

    @layer demo {
        header {
            min-height: 100vh;
            display: flex;
            place-items: center;
            width: 100%;
            padding-inline: 5rem;
        }

        footer {
            padding-block: 2rem;
            opacity: 0.5;
        }

        h1 {
            --font-size-min: 24;
            --font-level: 8;
            text-wrap: pretty;
            line-height: 0.8;
            margin: 0;
            background: linear-gradient(canvasText 60%,
                    color-mix(in oklch, canvas, canvasText));
            background-clip: text;
            color: #0000;
        }
    }

    @layer base {
        :root {
            --font-size-min: 14;
            --font-size-max: 20;
            --font-ratio-min: 1.1;
            --font-ratio-max: 1.33;
            --font-width-min: 375;
            --font-width-max: 1500;
        }

        html {
            color-scheme: light dark;
        }

        [data-theme='light'] {
            color-scheme: light only;
        }

        [data-theme='dark'] {
            color-scheme: dark only;
        }

        :where(.fluid) {
            --fluid-min: calc(var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0)));
            --fluid-max: calc(var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0)));
            --fluid-preferred: calc((var(--fluid-max) - var(--fluid-min)) / (var(--font-width-max) - var(--font-width-min)));
            --fluid-type: clamp((var(--fluid-min) / 16) * 1rem,
                    ((var(--fluid-min) / 16) * 1rem) - (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) + (var(--fluid-preferred) * var(--variable-unit, 100vi)),
                    (var(--fluid-max) / 16) * 1rem);
            font-size: var(--fluid-type);
        }

        *,
        *:after,
        *:before {
            box-sizing: border-box;
        }

        body {
            display: grid;
            place-items: center;
            background: light-dark(white, black);
            min-height: 100vh;
            font-family: 'Geist', 'SF Pro Text', 'SF Pro Icons', 'AOS Icons',
                'Helvetica Neue', Helvetica, Arial, sans-serif, system-ui;
        }

        body::before {
            --size: 45px;
            --line: color-mix(in hsl, canvasText, transparent 70%);
            content: '';
            height: 100vh;
            width: 100vw;
            position: fixed;
            background: linear-gradient(90deg,
                    var(--line) 1px,
                    transparent 1px var(--size)) 50% 50% / var(--size) var(--size),
                linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% / var(--size) var(--size);
            mask: linear-gradient(-20deg, transparent 50%, white);
            top: 0;
            transform-style: flat;
            pointer-events: none;
            z-index: -1;
        }

        .bear-link {

            position: fixed;
            top: 1rem;
            left: 1rem;
            width: 48px;
            aspect-ratio: 1;
            display: grid;
            place-items: center;
            opacity: 0.8;
        }

        :where(.x-link, .bear-link):is(:hover, :focus-visible) {
            opacity: 1;
        }

        .bear-link svg {
            width: 75%;
        }

        /* Utilities */
        .sr-only {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            white-space: nowrap;
            border-width: 0;
        }
    }

    div.tp-dfwv {
        position: fixed;
    }

    .button-wrap button {
        /* button */
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.3);
        /* border-radius: 10px; */
        backdrop-filter: blur(10px);
        padding: 10px 20px;
        color: white;
        font-size: 8rem;
        cursor: pointer;
        transition: background 0.3s ease, border 0.3s ease;
    }

    .button-wrap button:hover {
        background: rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.5);
    }

    @media (max-width: 768px) {
        .button-wrap button {
            padding: 8px 16px;
            font-size: 0.9rem;
        }
    }

    @media (max-width: 480px) {
        .button-wrap button {
            padding: 6px 12px;
            font-size: 0.8rem;
        }
    }


    /* button */
    @property --angle-1 {
        syntax: "<angle>";
        inherits: false;
        initial-value: -75deg;
    }

    @property --angle-2 {
        syntax: "<angle>";
        inherits: false;
        initial-value: -45deg;
    }

    :root {
        --global--size: clamp(2rem, 4vw, 5rem);
        --anim--hover-time: 400ms;
        --anim--hover-ease: cubic-bezier(0.25, 1, 0.5, 1);
    }

    /* Base Styles */
    /* body {
        display: grid; 
        align-items: center;
        justify-content: center;
        font-size: var(--global--size);
        background-color: rgba(215, 215, 215, 1);
        font-family: "Inter", sans-serif;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        overflow: hidden;
    } */

    /* ========== BUTTON ========== */

    /* Button Wrap Container */
    .button-wrap {
        position: relative;
        z-index: 2;
        border-radius: 999vw;
        background: transparent;
        pointer-events: none;
        transition: all var(--anim--hover-time) var(--anim--hover-ease);
    }

    /* Button Shadow Container */
    .button-shadow {
        --shadow-cuttoff-fix: 2em;
        position: absolute;
        width: calc(100% + var(--shadow-cuttoff-fix));
        height: calc(100% + var(--shadow-cuttoff-fix));
        top: calc(0% - var(--shadow-cuttoff-fix) / 2);
        left: calc(0% - var(--shadow-cuttoff-fix) / 2);
        filter: blur(clamp(2px, 0.125em, 12px));
        -webkit-filter: blur(clamp(2px, 0.125em, 12px));
        -moz-filter: blur(clamp(2px, 0.125em, 12px));
        -ms-filter: blur(clamp(2px, 0.125em, 12px));
        overflow: visible;
        pointer-events: none;
    }

    /* Shadow */
    .button-shadow::after {
        content: "";
        position: absolute;
        z-index: 0;
        inset: 0;
        border-radius: 999vw;
        background: linear-gradient(180deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.1));
        width: calc(100% - var(--shadow-cuttoff-fix) - 0.25em);
        height: calc(100% - var(--shadow-cuttoff-fix) - 0.25em);
        top: calc(var(--shadow-cuttoff-fix) - 0.5em);
        left: calc(var(--shadow-cuttoff-fix) - 0.875em);
        padding: 0.125em;
        box-sizing: border-box;
        mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
        mask-composite: exclude;
        transition: all var(--anim--hover-time) var(--anim--hover-ease);
        overflow: visible;
        opacity: 1;
    }

    /* ========== BUTTON BASE STYLES ========== */

    button {
        /* Basic Styling */
        --border-width: clamp(1px, 0.0625em, 4px);
        all: unset;
        cursor: pointer;
        position: relative;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        pointer-events: auto;
        z-index: 3;
        background: linear-gradient(-75deg,
                rgba(255, 255, 255, 0.05),
                rgba(255, 255, 255, 0.2),
                rgba(255, 255, 255, 0.05));
        border-radius: 999vw;
        box-shadow: inset 0 0.125em 0.125em rgba(0, 0, 0, 0.05),
            inset 0 -0.125em 0.125em rgba(255, 255, 255, 0.5),
            0 0.25em 0.125em -0.125em rgba(0, 0, 0, 0.2),
            0 0 0.1em 0.25em inset rgba(255, 255, 255, 0.2),
            0 0 0 0 rgba(255, 255, 255, 1);
        backdrop-filter: blur(clamp(1px, 0.125em, 4px));
        -webkit-backdrop-filter: blur(clamp(1px, 0.125em, 4px));
        -moz-backdrop-filter: blur(clamp(1px, 0.125em, 4px));
        -ms-backdrop-filter: blur(clamp(1px, 0.125em, 4px));
        transition: all var(--anim--hover-time) var(--anim--hover-ease);
    }

    button:hover {
        transform: scale(0.975);
        backdrop-filter: blur(0.01em);
        -webkit-backdrop-filter: blur(0.01em);
        -moz-backdrop-filter: blur(0.01em);
        -ms-backdrop-filter: blur(0.01em);
        box-shadow: inset 0 0.125em 0.125em rgba(0, 0, 0, 0.05),
            inset 0 -0.125em 0.125em rgba(255, 255, 255, 0.5),
            0 0.15em 0.05em -0.1em rgba(0, 0, 0, 0.25),
            0 0 0.05em 0.1em inset rgba(255, 255, 255, 0.5),
            0 0 0 0 rgba(255, 255, 255, 1);
    }

    /* Button Text */
    button span {
        position: relative;
        display: block;
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        font-family: "Inter", sans-serif;
        letter-spacing: -0.05em;
        font-weight: 500;
        font-size: 1em;
        /* make changes here for color */
        color: light-dark(black, white);
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        text-shadow: 0em 0.25em 0.05em rgba(0, 0, 0, 0.1);
        transition: all var(--anim--hover-time) var(--anim--hover-ease);
        padding-inline: 1.5em;
        padding-block: 0.875em;
    }

    button:hover span {
        text-shadow: 0.025em 0.025em 0.025em rgba(0, 0, 0, 0.12);
    }

    /* Text */
    button span::after {
        content: "";
        display: block;
        position: absolute;
        z-index: 1;
        width: calc(100% - var(--border-width));
        /* Prevent overlapping border */
        height: calc(100% - var(--border-width));
        top: calc(0% + var(--border-width) / 2);
        left: calc(0% + var(--border-width) / 2);
        box-sizing: border-box;
        border-radius: 999vw;
        overflow: clip;
        background: linear-gradient(var(--angle-2),
                rgba(255, 255, 255, 0) 0%,
                rgba(255, 255, 255, 0.5) 40% 50%,
                rgba(255, 255, 255, 0) 55%);
        z-index: 3;
        mix-blend-mode: screen;
        pointer-events: none;
        background-size: 200% 200%;
        background-position: 0% 50%;
        background-repeat: no-repeat;
        transition: background-position calc(var(--anim--hover-time) * 1.25) var(--anim--hover-ease),
            --angle-2 calc(var(--anim--hover-time) * 1.25) var(--anim--hover-ease);
    }

    button:hover span::after {
        background-position: 25% 50%;
    }

    button:active span::after {
        background-position: 50% 15%;
        --angle-2: -15deg;
    }

    @media(prefers-color-scheme: dark) {
        .logo-light {
            display: none;
        }

    }

    @media(prefers-color-scheme: light) {
        .logo-dark {
            display: none;
        }

    }


    /* Touch Devices */
    @media (hover: none) and (pointer: coarse) {

        button span::after,
        button:active span::after {
            --angle-2: -45deg;
        }
    }

    /* ========== BUTTON OUTLINE ========== */

    /* Outline */
    button::after {
        content: "";
        position: absolute;
        z-index: 1;
        inset: 0;
        border-radius: 999vw;
        width: calc(100% + var(--border-width));
        height: calc(100% + var(--border-width));
        top: calc(0% - var(--border-width) / 2);
        left: calc(0% - var(--border-width) / 2);
        padding: var(--border-width);
        box-sizing: border-box;
        background: conic-gradient(from var(--angle-1) at 50% 50%,
                rgba(0, 0, 0, 0.5),
                rgba(0, 0, 0, 0) 5% 40%,
                rgba(0, 0, 0, 0.5) 50%,
                rgba(0, 0, 0, 0) 60% 95%,
                rgba(0, 0, 0, 0.5)),
            linear-gradient(180deg, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5));
        mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
        mask-composite: exclude;
        transition: all var(--anim--hover-time) var(--anim--hover-ease),
            --angle-1 500ms ease;
        box-shadow: inset 0 0 0 calc(var(--border-width) / 2) rgba(255, 255, 255, 0.5);
    }

    button:hover::after {
        --angle-1: -125deg;
    }

    button:active::after {
        --angle-1: -75deg;
    }

    @media (hover: none) and (pointer: coarse) {

        button::after,
        button:hover::after,
        button:active::after {
            --angle-1: -75deg;
        }
    }

    /* Shadow Hover */
    .button-wrap:has(button:hover) .button-shadow {
        filter: blur(clamp(2px, 0.0625em, 6px));
        -webkit-filter: blur(clamp(2px, 0.0625em, 6px));
        -moz-filter: blur(clamp(2px, 0.0625em, 6px));
        -ms-filter: blur(clamp(2px, 0.0625em, 6px));
        transition: filter var(--anim--hover-time) var(--anim--hover-ease);
    }

    .button-wrap:has(button:hover) .button-shadow::after {
        top: calc(var(--shadow-cuttoff-fix) - 0.875em);
        opacity: 1;
    }

    /* Rotation */
    .button-wrap:has(button:active) {
        transform: rotate3d(1, 0, 0, 25deg);
    }

    .button-wrap:has(button:active) button {
        box-shadow: inset 0 0.125em 0.125em rgba(0, 0, 0, 0.05),
            inset 0 -0.125em 0.125em rgba(255, 255, 255, 0.5),
            0 0.125em 0.125em -0.125em rgba(0, 0, 0, 0.2),
            0 0 0.1em 0.25em inset rgba(255, 255, 255, 0.2),
            0 0.225em 0.05em 0 rgba(0, 0, 0, 0.05),
            0 0.25em 0 0 rgba(255, 255, 255, 0.75),
            inset 0 0.25em 0.05em 0 rgba(0, 0, 0, 0.15);
    }

    .button-wrap:has(button:active) .button-shadow {
        filter: blur(clamp(2px, 0.125em, 12px));
        -webkit-filter: blur(clamp(2px, 0.125em, 12px));
        -moz-filter: blur(clamp(2px, 0.125em, 12px));
        -ms-filter: blur(clamp(2px, 0.125em, 12px));
    }

    .button-wrap:has(button:active) .button-shadow::after {
        top: calc(var(--shadow-cuttoff-fix) - 0.5em);
        opacity: 0.75;
    }

    .button-wrap:has(button:active) span {
        text-shadow: 0.025em 0.25em 0.05em rgba(0, 0, 0, 0.12);
    }

    @media (max-width: 768px) {
        body {
            padding: 1rem;
        }

        header {
            padding-inline: 2rem;
        }

        footer {
            padding-block: 1rem;
        }

        h1 {
            font-size: 1.5rem;
        }

        .button-wrap button {
            padding: 8px 16px;
            font-size: 1rem;
        }

        .bear-link {
            top: 0.5rem;
            left: 0.5rem;
            width: 36px;
        }
    }


    @media (max-width: 400px) {
        body {
            padding: 0.5rem;
        }

        header {
            padding-inline: 1rem;
        }

        footer {
            padding-block: 0.5rem;
        }

        h1 {
            font-size: 1.25rem;
        }

        .button-wrap button {
            padding: 6px 12px;
            font-size: 0.875rem;
        }

        .bear-link {
            top: 0.25rem;
            left: 0.25rem;
            width: 24px;
        }
    }
